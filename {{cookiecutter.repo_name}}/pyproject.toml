[tool.poetry]
name = "{{ cookiecutter.distribution_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = [{{ cookiecutter.authors }}]
license = "{{ cookiecutter.license }}"
readme = "{{ cookiecutter.readme }}"
keywords = [{{ cookiecutter.keywords }}]
repository = "{{ cookiecutter.repo_url }}"
packages = [
    { include = "pelican" },
]

classifiers = [
    "Development Status :: {{ cookiecutter.dev_status }}",
    "Environment :: Console",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
{%- if cookiecutter.license == "AGPL-3.0" %}
    "License :: OSI Approved :: GNU Affero General Public License v3",
{%- elif cookiecutter.license == "Apache-2.0" %}
    "License :: OSI Approved :: Apache Software License",
{%- elif cookiecutter.license in ["BSD-2-Clause", "BSD-3-Clause"] %}
    "License :: OSI Approved :: BSD License",
{%- elif cookiecutter.license == "MIT" %}
    "License :: OSI Approved :: MIT License",
{%- endif %}
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"Documentation" = "https://docs.getpelican.com/"
"Funding" = "https://donate.getpelican.com/"
"Source" = "{{ cookiecutter.repo_url }}"
"Tracker" = "{{ cookiecutter.repo_url }}/issues"

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"
pelican = "{{ cookiecutter.pelican_version }}"
markdown = {version = "^3.1.1",optional = true}

[tool.poetry.dev-dependencies]
black = {version = "^19.10b0",allows-prereleases = true}
flake8 = "^3.7"
flake8-black = "^0.1.0"
invoke = "^1.3"
isort = "^4.3"
livereload = "^2.6"
markdown = "^3.1.1"
pytest = "^5.0"
pytest-cov = "^2.7"
pytest-pythonpath = "^0.7.3"
pytest-sugar = "^0.9.2"
Werkzeug = "^0.15.5"

[tool.poetry.extras]
markdown = ["markdown"]

[tool.isort]
# Maintain compatibility with Black
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3

# Sort imports within their section independent of the import type
force_sort_within_sections = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
